# image docker pour les jobs du pipeline
image: bitnami/dotnet-sdk:3.1-debian-11

stages:
  - testing
  - building
  - deploying

deps:
  stage: .pre
  tags:
    - myusine
  # restaure les dépendances
  script:
    - dotnet restore
  # prélèvement du cache
  cache:
    key: dependencies
    paths:
      - ~/.nuget/packages
    policy: push
  # génération du cache dès qu'un fichier projet
  # est modifié
  rules:
    - changes:
        - ./**/*.csproj

# nom de job: valeur arbitraire
test:
  stage: testing
  # tag correspondant au runner
  tags:
    - myusine
  # liste des commandes à exécuter
  script:
    # ajout du projet cible au projet test pour exécution des tests
    # - dotnet add ./usine_s3_test/usine_s3_test.csproj reference ./usine_s3/usine_s3.csproj
    # ajout d'un package à un projet
    # - dotnet add ./usine_s3_test/usine_s3_test.csproj package JUnitTestLogger --version 1.1.0
    # - dotnet test -v normal
    # || exit 0: rend la commande non bloquante
    - > 
      dotnet test || exit 0
      # sans réinstaller les dépendances
    - dotnet test
      --no-restore
      --logger "junit;LogFilePath=reports/units.xml" 
      --results-directory:reports
      --collect "XPlat Code Coverage"
  artifacts:
    expire_in: 1 hour
    # remontée de certains rapports particuliers
    # directement dans l'interface graphique de gitlab CI
    reports:
      junit: usine_s3_test/reports/units.xml
      cobertura: "reports/**/coverage.cobertura.xml"
  # installation du cache
  cache:
    key: dependencies
    untracked: true
    policy: pull


# un job qui commence par "." est désactivé
.build:
  stage: building
  # commandes de préparation du job
  #before_script:
  #  - apt-get update -qq && apt-get install tree -y 
  tags:
    - myusine
  script:
    - dotnet build --no-restore
  # prélèvement des fichiers/dossiers générés dans le job
  # pour téléchargement depuis gitlab
  # pour transmission aux jobs suivants
  artifacts:
    expire_in: 1 hour
    paths:
      - ./usine_s3/bin/Debug/netcoreapp3.1/
  cache:
    key: dependencies
    untracked: true
    policy: pull

deploy:
  stage: deploying
  tags:
    - myusine
  script:
    - dotnet exec ./usine_s3/bin/Debug/netcoreapp3.1/usine_s3.dll
  # règles d'exécution du job
  rules:
    # le job s'exécute si au moins une règle est vraie
    # OU logique
    # utilisation de variables d'environnement prédéfinies
    # - if: $CI_COMMIT_BRANCH == "master"
    # une règle est vraie si toutes ses clauses sont vraies
    # ET logique
    - if: $CI_COMMIT_TAG
      when: manual